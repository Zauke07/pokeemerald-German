const VAR_STATUS_PARAM = VAR_0x8000

const VAR_LOCAL_MON_SLOT = VAR_0x800A
const VAR_REMOTE_MON_SLOT = VAR_0x800B

script RogueMP_Common_ExtractYesNoAnswer
{
    if(var(VAR_RESULT) == YES)
    {
        if(var(VAR_STATUS_PARAM) != 1)
        {
            setvar(VAR_RESULT, NO)
        }
    }
    return
}

script RogueMP_Common_GrabRemoteMon
{
    copyvar(VAR_0x8004, VAR_REMOTE_MON_SLOT)
    special(Rogue_MultiplayerRequestMon)

    message(format("Waiting for other player…\n… … B Button: Cancel"))
    special(Rogue_WaitForRemoteResponse)
    waitstate
    closemessage
}

script Rogue_InteractMultiplayerPlayer
{
    lock

    message(format("Waiting for other player…\n… … B Button: Cancel"))
    multiplayerpushstatusawait(MP_PLAYER_STATUS_TALK_TO_PLAYER, 0, TRUE)
    waitstate

    if(var(VAR_RESULT) == TRUE)
    {
        msgbox(format("{RIVAL}: Hi, I'm {RIVAL}!"))

        // TODO - Give more options
        msgbox(format("Would you like to trade Pokémon?"), MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES)
        {
            msgbox(format("Which Pokémon would you like to trade?"))
            special(ChoosePartyMon)
            waitstate

            copyvar(VAR_LOCAL_MON_SLOT, VAR_0x8004)

            message(format("Waiting for other player…\n… … B Button: Cancel"))
            multiplayerpushstatusawait(MP_PLAYER_STATUS_TALK_TO_PLAYER, VAR_LOCAL_MON_SLOT, TRUE)
            waitstate

            if(var(VAR_LOCAL_MON_SLOT) == PARTY_NOTHING_CHOSEN)
            {
                setvar(VAR_RESULT, NO)
            }

            if(var(VAR_RESULT) == YES)
            {
                special(Rogue_WaitForNextPlayerStatusCancellable)
                waitstate

                copyvar(VAR_REMOTE_MON_SLOT, VAR_STATUS_PARAM)
                
                if(var(VAR_RESULT) == YES)
                {
                    if(var(VAR_REMOTE_MON_SLOT) == PARTY_NOTHING_CHOSEN)
                    {
                        setvar(VAR_RESULT, NO)
                    }

                    if(var(VAR_RESULT) == YES)
                    {
                        call(RogueMP_Common_GrabRemoteMon)

                        special(Rogue_PrepareForTrade)
                        special(DoInGameTradeScene)
                        waitstate
                    }
                }
            }
        }
        else
        {
            multiplayerpushstatusawait(MP_PLAYER_STATUS_TALK_TO_PLAYER, PARTY_NOTHING_CHOSEN, TRUE)
            waitstate
        }
    }

    if(var(VAR_RESULT) == FALSE)
    {
        msgbox(format("Maybe some other time."))
    }

    multiplayerpushstatus(MP_PLAYER_STATUS_NONE, 0)
    release
}

script Rogue_RemoteInteractMultiplayerPlayer
{
    lock

    message(format("{RIVAL}: Hi, Let's talk!\n… … B Button: Cancel"))

    special(Rogue_WaitForNextPlayerStatusCancellable)
    waitstate

    // TODO - Give more options

    if(var(VAR_RESULT) == YES)
    {
        copyvar(VAR_REMOTE_MON_SLOT, VAR_STATUS_PARAM)
        
        if(var(VAR_REMOTE_MON_SLOT) == PARTY_NOTHING_CHOSEN)
        {
            setvar(VAR_RESULT, NO)
        }
        
        if(var(VAR_RESULT) == YES)
        {
            msgbox(format("{RIVAL}: Would you like to trade Pokémon?"), MSGBOX_YESNO)

            if(var(VAR_RESULT) == YES)
            {            
                msgbox(format("Which Pokémon would you like to trade?"))
                special(ChoosePartyMon)
                waitstate

                copyvar(VAR_LOCAL_MON_SLOT, VAR_0x8004)

                message(format("Waiting for other player…\n… … B Button: Cancel"))
                multiplayerpushstatusawait(MP_PLAYER_STATUS_TALK_TO_PLAYER, VAR_LOCAL_MON_SLOT, TRUE)
                waitstate

                if(var(VAR_LOCAL_MON_SLOT) == PARTY_NOTHING_CHOSEN)
                {
                    setvar(VAR_RESULT, NO)
                }

                if(var(VAR_RESULT) == YES)
                {
                    call(RogueMP_Common_GrabRemoteMon)

                    special(Rogue_PrepareForTrade)
                    special(DoInGameTradeScene)
                    waitstate
                }
            }
            else
            {
                multiplayerpushstatusawait(MP_PLAYER_STATUS_TALK_TO_PLAYER, PARTY_NOTHING_CHOSEN, TRUE)
                waitstate
            }
        }
    }

    if(var(VAR_RESULT) == FALSE)
    {
        msgbox(format("{RIVAL}: Bye for now!"))
    }

    multiplayerpushstatus(MP_PLAYER_STATUS_NONE, 0)
    release
}

script Rogue_InteractMultiplayerFollowMon
{
    lock

    special(Rogue_GetFollowMonSpecies)
    playmoncry(VAR_0x800A, CRY_MODE_NORMAL)

    release
}